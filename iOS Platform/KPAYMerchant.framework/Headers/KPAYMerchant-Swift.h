// Generated by Apple Swift version 4.1.2 (swiftlang-902.0.54 clang-902.0.39.2)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import UIKit;
@import CoreGraphics;
@import QuartzCore;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="KPAYMerchant",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSCoder;

SWIFT_CLASS("_TtC12KPAYMerchant10BaseEntity")
@interface BaseEntity : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface BaseEntity (SWIFT_EXTENSION(KPAYMerchant)) <NSCoding>
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
@end


SWIFT_CLASS("_TtC12KPAYMerchant11BaseManager")
@interface BaseManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@protocol UIViewControllerTransitionCoordinator;
@class NSBundle;

SWIFT_CLASS("_TtC12KPAYMerchant18BaseViewController")
@interface BaseViewController : UIViewController
@property (nonatomic) BOOL hasNavigationBar;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)didReceiveMemoryWarning;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




@interface CALayer (SWIFT_EXTENSION(KPAYMerchant))
- (void)pause;
- (void)resume;
@end


SWIFT_CLASS("_TtC12KPAYMerchant9Configure")
@interface Configure : NSObject
@property (nonatomic, copy) NSString * _Null_unspecified clientKey;
@property (nonatomic, copy) NSString * _Nullable secretKey;
@property (nonatomic, copy) NSString * _Null_unspecified userId;
@property (nonatomic, copy) NSString * _Null_unspecified desireLanguage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12KPAYMerchant7Country")
@interface Country : BaseEntity
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12KPAYMerchant10CryptoCoin")
@interface CryptoCoin : BaseEntity
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12KPAYMerchant13CryptoManager")
@interface CryptoManager : BaseManager
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) CryptoManager * _Nullable internalInstance;)
+ (CryptoManager * _Nullable)internalInstance SWIFT_WARN_UNUSED_RESULT;
+ (void)setInternalInstance:(CryptoManager * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CryptoManager * _Nonnull shared;)
+ (CryptoManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC12KPAYMerchant17CryptoMarketPrice")
@interface CryptoMarketPrice : BaseEntity
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12KPAYMerchant10Enterprise")
@interface Enterprise : BaseEntity
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12KPAYMerchant5Macro")
@interface Macro : NSObject
+ (void)dispatchAfterSecond:(NSTimeInterval)time execute:(void (^ _Nonnull)(void))execute;
+ (void)Log:(NSString * _Nonnull)msg;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12KPAYMerchant18MainViewController")
@interface MainViewController : BaseViewController
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kNotificationDidReceiveResult;)
+ (NSString * _Nonnull)kNotificationDidReceiveResult SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)viewWillAppear:(BOOL)animated;
- (void)junk;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSDictionary<KeyType, ObjectType> (SWIFT_EXTENSION(KPAYMerchant))
- (NSString * _Nullable)toJsonString SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSObject (SWIFT_EXTENSION(KPAYMerchant))
- (void)observeNotificationWithSelector:(SEL _Nonnull)selector name:(NSString * _Nonnull)name object:(id _Nullable)object;
- (void)removeObservationNotificationWithHasName:(NSString * _Nonnull)name object:(id _Nullable)object;
- (void)removeAllObservationNotification;
+ (void)postNotificationWithHasName:(NSString * _Nonnull)name;
+ (void)postNotificationWithHasName:(NSString * _Nonnull)name object:(id _Nullable)object;
+ (void)postNotificationWithHasName:(NSString * _Nonnull)name object:(id _Nullable)object userInfo:(NSDictionary<NSString *, id> * _Nullable)userInfo;
@end


SWIFT_CLASS("_TtC12KPAYMerchant14NetworkManager")
@interface NetworkManager : BaseManager
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NetworkManager * _Nullable internalInstance;)
+ (NetworkManager * _Nullable)internalInstance SWIFT_WARN_UNUSED_RESULT;
+ (void)setInternalInstance:(NetworkManager * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NetworkManager * _Nonnull shared;)
+ (NetworkManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@end














SWIFT_CLASS("_TtC12KPAYMerchant14PrivateManager")
@interface PrivateManager : BaseManager
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) PrivateManager * _Nullable internalInstance;)
+ (PrivateManager * _Nullable)internalInstance SWIFT_WARN_UNUSED_RESULT;
+ (void)setInternalInstance:(PrivateManager * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PrivateManager * _Nonnull shared;)
+ (PrivateManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) double requestedAmount;
@property (nonatomic, copy) NSString * _Nullable referenceId;
@property (nonatomic, copy) NSString * _Nullable customMessage;
- (void)clearData;
@end

@class UIColor;
@class UIFont;

SWIFT_CLASS("_TtC12KPAYMerchant16SRCountdownTimer")
@interface SRCountdownTimer : UIView
@property (nonatomic) CGFloat lineWidth;
@property (nonatomic, strong) UIColor * _Nonnull lineColor;
@property (nonatomic, strong) UIColor * _Nonnull trailLineColor;
@property (nonatomic) BOOL isLabelHidden;
@property (nonatomic, strong) UIFont * _Nullable labelFont;
@property (nonatomic, strong) UIColor * _Nullable labelTextColor;
@property (nonatomic, copy) NSString * _Nullable timerFinishingText;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
@end


SWIFT_PROTOCOL("_TtP12KPAYMerchant24SRCountdownTimerDelegate_")
@protocol SRCountdownTimerDelegate
@optional
- (void)timerDidUpdateCounterValueWithNewValue:(NSInteger)newValue;
- (void)timerDidStart;
- (void)timerDidPause;
- (void)timerDidResume;
- (void)timerDidEndWithTimer:(SRCountdownTimer * _Nonnull)timer;
@end


SWIFT_CLASS("_TtC12KPAYMerchant14SettingManager")
@interface SettingManager : BaseManager
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) SettingManager * _Nullable internalInstance;)
+ (SettingManager * _Nullable)internalInstance SWIFT_WARN_UNUSED_RESULT;
+ (void)setInternalInstance:(SettingManager * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SettingManager * _Nonnull shared;)
+ (SettingManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) Configure * _Nullable config;
@property (nonatomic, strong) Enterprise * _Nullable enterprise;
@end


@interface UIColor (SWIFT_EXTENSION(KPAYMerchant))
+ (UIColor * _Nonnull)defaultSystemTintColor SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIFont (SWIFT_EXTENSION(KPAYMerchant))
+ (void)registerFontWithFilenameStringWithFilenameString:(NSString * _Nonnull)filenameString bundle:(NSBundle * _Nonnull)bundle;
@end











#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
